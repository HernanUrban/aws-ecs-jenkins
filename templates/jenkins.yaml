AWSTemplateFormatVersion: "2010-09-09"
Description: >
  Service on ECS

Parameters:
  Project:
    Description: Project name
    Type: String

  Environment:
    Description: Environment of the project
    Type: String
    Default: DEV
    AllowedValues:
    - DEV
    - QA
    - UAT
    - PROD
  Owner:
    Description: Full name or email
    Type: String
    
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: Select a VPC that allows instances to access the Internet.
  SubnetID:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Select at two subnets in your selected VPC.

  ECSCluster:
    Description: Name of ECS Cluster for the task
    Type: String

  Image:
    Description: Name of the image
    Type: String
    
  ContainerCPU:
    Description: CPU credits for docker container
    Type: String
    Default: 1024
    
  ContainerMemory:
    Type: String
    Default: 1024

  ContainerPort:
    Type: Number
    Default: 8080

  JNLPContainerPort:
    Type: Number
    Default: 50000

  ECSSecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
    Description: ELB Security groups
    
Resources:

  CloudWatchLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Ref AWS::StackName
      RetentionInDays: 90

  JenkinsLoadBalancer:
    Type: AWS::ElasticLoadBalancing::LoadBalancer
    Properties:
      LoadBalancerName: !Sub ${Project}-public-elb-${Environment}
      Subnets: !Ref SubnetID
      HealthCheck:
        HealthyThreshold: 2
        Interval: 30
        Target: HTTP:8080/login
        Timeout: 10
        UnhealthyThreshold: 10
      SecurityGroups:
      - !Ref ECSSecurityGroup
      Listeners:
      - LoadBalancerPort: 80
        InstancePort: 8080
        Protocol: HTTP
        PolicyNames:
        - JenkinsELBStickiness
      - LoadBalancerPort: 50000
        InstancePort: 50000
        Protocol: TCP
      LBCookieStickinessPolicy:
      - CookieExpirationPeriod: '3600'
        PolicyName: JenkinsELBStickiness
      Tags:
      - Key: Name
        Value: !Sub ${Project}-public-elb-${Environment}
      - Key: Owner
        Value: !Ref Owner
      - Key: Environment
        Value: !Ref Environment
      - Key: Project
        Value: !Ref Project

  taskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family:
        Fn::Join:
        - "-"
        - - Jenkins
          - Ref: Project
          - task
      Volumes:
      - Name: jenkins-home
        Host:
          SourcePath: /EFS/var/jenkins_home
      - Name: docker-socket
        Host:
          SourcePath: /var/run/docker.sock
      ContainerDefinitions:
      - Name: Jenkins
        Cpu:
          Ref: ContainerCPU
        Essential: true
        Image:
          Ref: Image
        Privileged: true
        MountPoints:
        - SourceVolume: jenkins-home
          ContainerPath: /var/jenkins_home
        - SourceVolume: docker-socket
          ContainerPath: /var/run/docker.sock
        Memory: !Ref ContainerMemory
        PortMappings:
        - HostPort: !Ref ContainerPort
          ContainerPort: !Ref ContainerPort
          Protocol: tcp
        - HostPort: !Ref JNLPContainerPort
          ContainerPort: !Ref JNLPContainerPort
          Protocol: tcp
        LogConfiguration:
          LogDriver: awslogs
          Options:
            awslogs-group: !Ref AWS::StackName
            awslogs-region: !Ref AWS::Region
            awslogs-stream-prefix: Jenkins

  Service:
    Type: AWS::ECS::Service
    DependsOn: JenkinsLoadBalancer
    Properties:
      Cluster: 
        Ref: ECSCluster
      Role:
        Ref: ECSServiceRole
      DesiredCount: '1'
      TaskDefinition: !Ref taskDefinition
      DeploymentConfiguration:
        MinimumHealthyPercent: 50
      LoadBalancers:
      - ContainerName: Jenkins
        ContainerPort: !Ref ContainerPort
        LoadBalancerName:
          Ref: JenkinsLoadBalancer
  ECSServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ecs.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: ecs-service
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
            - elasticloadbalancing:DeregisterInstancesFromLoadBalancer
            - elasticloadbalancing:DeregisterTargets
            - elasticloadbalancing:Describe*
            - elasticloadbalancing:RegisterInstancesWithLoadBalancer
            - elasticloadbalancing:RegisterTargets
            - ec2:Describe*
            - ec2:AuthorizeSecurityGroupIngress
            Resource: "*"

Outputs:
  ecsservice:
    Value:
      Ref: Service
  JenkinsLoadBalancer:
    Description: Your ALB DNS URL
    Value:
      Fn::Join:
      - ''
      - - Fn::GetAtt:
          - JenkinsLoadBalancer
          - DNSName
